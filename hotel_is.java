/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hotel.is;

import java.awt.Desktop;
import java.awt.Point;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DELL
 */
public class hotel_is extends javax.swing.JFrame {

    /**
     * Creates new form hotel_is
     */
    public hotel_is() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        mainPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        mainTable = new javax.swing.JTable();
        System_Title = new javax.swing.JLabel();
        NameOrlocationSearch = new javax.swing.JTextField();
        priceSearch = new javax.swing.JTextField();
        Search = new javax.swing.JButton();
        High_to_Low = new javax.swing.JRadioButton();
        Low_to_High = new javax.swing.JRadioButton();
        For_Rating = new javax.swing.JComboBox<>();
        Edit = new javax.swing.JButton();
        Price = new javax.swing.JLabel();
        Rating = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        editPanel = new javax.swing.JPanel();
        Edit_Systemtitle = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        editTable = new javax.swing.JTable();
        Add = new javax.swing.JButton();
        Update = new javax.swing.JButton();
        Delete = new javax.swing.JButton();
        hotelName_edit = new javax.swing.JTextField();
        location_edit = new javax.swing.JTextField();
        phone_edit = new javax.swing.JTextField();
        rating_edit = new javax.swing.JTextField();
        price_edit = new javax.swing.JTextField();
        Back = new javax.swing.JButton();
        Menu = new javax.swing.JMenuBar();
        FileMenu = new javax.swing.JMenu();
        OpenMenu = new javax.swing.JMenuItem();
        ExitFile = new javax.swing.JMenuItem();
        EditMenu = new javax.swing.JMenu();
        changePanel = new javax.swing.JMenuItem();
        ClearEdit = new javax.swing.JMenuItem();
        HelpMenu = new javax.swing.JMenu();
        Help = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        mainTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Hotel Name", "Location", "Phone Number", "Rating", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(mainTable);

        System_Title.setBackground(new java.awt.Color(0, 92, 41));
        System_Title.setFont(new java.awt.Font("Pristina", 1, 30)); // NOI18N
        System_Title.setForeground(new java.awt.Color(255, 255, 255));
        System_Title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        System_Title.setText("Hotel Information Sytem");
        System_Title.setToolTipText("");
        System_Title.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        System_Title.setOpaque(true);

        NameOrlocationSearch.setToolTipText("");
        NameOrlocationSearch.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Hotel Name or Location", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 0, 10))); // NOI18N
        NameOrlocationSearch.setName(""); // NOI18N
        NameOrlocationSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                NameOrlocationSearchKeyPressed(evt);
            }
        });

        priceSearch.setToolTipText("");
        priceSearch.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Price", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 0, 10))); // NOI18N
        priceSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceSearchActionPerformed(evt);
            }
        });
        priceSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                priceSearchKeyTyped(evt);
            }
        });

        Search.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hotel/is/oie_1119215VMwmf0EW.png"))); // NOI18N
        Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchActionPerformed(evt);
            }
        });

        buttonGroup1.add(High_to_Low);
        High_to_Low.setText("High to Low");
        High_to_Low.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                High_to_LowActionPerformed(evt);
            }
        });

        buttonGroup1.add(Low_to_High);
        Low_to_High.setText("Low to High");
        Low_to_High.setToolTipText("");
        Low_to_High.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Low_to_HighActionPerformed(evt);
            }
        });

        For_Rating.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose the rating", "1", "2", "3", "4", "5" }));
        For_Rating.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                For_RatingActionPerformed(evt);
            }
        });

        Edit.setText("Edit");
        Edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditActionPerformed(evt);
            }
        });

        Price.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Price.setText("Price");

        Rating.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Rating.setText("Rating");

        jScrollPane4.setBackground(new java.awt.Color(74, 21, 75));
        jScrollPane4.setOpaque(false);

        jPanel2.setBackground(new java.awt.Color(0, 92, 41));

        jLabel1.setFont(new java.awt.Font("Pristina", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Some of the top hotels");

        jLabel3.setFont(new java.awt.Font("Pristina", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Hotel Moonlight");

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hotel/is/Untitled.jpg"))); // NOI18N

        jLabel5.setFont(new java.awt.Font("Pristina", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Hotel Sunshine");

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hotel/is/Untitled.png"))); // NOI18N

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hotel/is/Untitled-1.jpg"))); // NOI18N

        jLabel8.setFont(new java.awt.Font("Pristina", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Hotel Star");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(145, 145, 145)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 216, Short.MAX_VALUE)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(204, 204, 204)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(152, 152, 152))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(jLabel8))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(jLabel5))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(jLabel3))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(jLabel1))
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jScrollPane4.setViewportView(jPanel2);

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jScrollPane1)
                .addGap(38, 38, 38))
            .addComponent(System_Title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addContainerGap(36, Short.MAX_VALUE)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(NameOrlocationSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(mainPanelLayout.createSequentialGroup()
                                        .addGap(77, 77, 77)
                                        .addComponent(High_to_Low)
                                        .addGap(18, 18, 18)
                                        .addComponent(Low_to_High))
                                    .addComponent(priceSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Edit, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Search, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(10, 10, 10))))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Price, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Rating, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(For_Rating, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(175, 175, 175)))
                .addGap(37, 37, 37)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addComponent(System_Title, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(NameOrlocationSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addComponent(priceSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(21, 21, 21)
                                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(Rating)
                                    .addComponent(For_Rating, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(Price)
                                    .addComponent(High_to_Low)
                                    .addComponent(Low_to_High)))
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addComponent(Search, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(Edit, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(75, Short.MAX_VALUE))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        Edit_Systemtitle.setBackground(new java.awt.Color(0, 92, 41));
        Edit_Systemtitle.setFont(new java.awt.Font("Pristina", 1, 30)); // NOI18N
        Edit_Systemtitle.setForeground(new java.awt.Color(255, 255, 255));
        Edit_Systemtitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Edit_Systemtitle.setText("Hotel Information System");
        Edit_Systemtitle.setToolTipText("");
        Edit_Systemtitle.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        Edit_Systemtitle.setOpaque(true);
        Edit_Systemtitle.setPreferredSize(new java.awt.Dimension(289, 37));

        editTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Hotel Name", "Location", "Phone Number", "Rating", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        editTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                editTableMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                editTableMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(editTable);
        if (editTable.getColumnModel().getColumnCount() > 0) {
            editTable.getColumnModel().getColumn(0).setResizable(false);
            editTable.getColumnModel().getColumn(1).setResizable(false);
            editTable.getColumnModel().getColumn(2).setResizable(false);
            editTable.getColumnModel().getColumn(3).setResizable(false);
            editTable.getColumnModel().getColumn(4).setResizable(false);
        }

        Add.setText("Add");
        Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddActionPerformed(evt);
            }
        });

        Update.setText("Update");
        Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateActionPerformed(evt);
            }
        });

        Delete.setText("Delete");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });

        hotelName_edit.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        hotelName_edit.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Hotel Name", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 0, 10))); // NOI18N
        hotelName_edit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                hotelName_editKeyPressed(evt);
            }
        });

        location_edit.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        location_edit.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Location", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 0, 10))); // NOI18N
        location_edit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                location_editKeyPressed(evt);
            }
        });

        phone_edit.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        phone_edit.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Phone Number", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 0, 10))); // NOI18N
        phone_edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phone_editActionPerformed(evt);
            }
        });
        phone_edit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                phone_editKeyTyped(evt);
            }
        });

        rating_edit.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        rating_edit.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Rating", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 0, 10))); // NOI18N
        rating_edit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                rating_editKeyTyped(evt);
            }
        });

        price_edit.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        price_edit.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Price", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 0, 10))); // NOI18N
        price_edit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                price_editKeyTyped(evt);
            }
        });

        Back.setText("Back");
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout editPanelLayout = new javax.swing.GroupLayout(editPanel);
        editPanel.setLayout(editPanelLayout);
        editPanelLayout.setHorizontalGroup(
            editPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Edit_Systemtitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(editPanelLayout.createSequentialGroup()
                .addContainerGap(59, Short.MAX_VALUE)
                .addGroup(editPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 724, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(editPanelLayout.createSequentialGroup()
                        .addGroup(editPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(editPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(editPanelLayout.createSequentialGroup()
                                    .addComponent(hotelName_edit, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(61, 61, 61)
                                    .addComponent(location_edit, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(editPanelLayout.createSequentialGroup()
                                    .addComponent(phone_edit, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(rating_edit, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(price_edit, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(editPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editPanelLayout.createSequentialGroup()
                                .addComponent(Add, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(Update, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(Back, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addComponent(Delete, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(59, Short.MAX_VALUE))
        );
        editPanelLayout.setVerticalGroup(
            editPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editPanelLayout.createSequentialGroup()
                .addComponent(Edit_Systemtitle, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(editPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(editPanelLayout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(editPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(hotelName_edit, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(location_edit, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Add, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Update, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Delete, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(17, 17, 17)
                        .addGroup(editPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(phone_edit, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rating_edit, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                        .addComponent(price_edit, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(editPanelLayout.createSequentialGroup()
                        .addGap(132, 132, 132)
                        .addComponent(Back, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(18, 18, 18))
        );

        FileMenu.setText("File");

        OpenMenu.setText("Open");
        OpenMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenMenuActionPerformed(evt);
            }
        });
        FileMenu.add(OpenMenu);

        ExitFile.setText("Exit");
        ExitFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitFileActionPerformed(evt);
            }
        });
        FileMenu.add(ExitFile);

        Menu.add(FileMenu);

        EditMenu.setText("Edit");

        changePanel.setText("Change Panel");
        changePanel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changePanelActionPerformed(evt);
            }
        });
        EditMenu.add(changePanel);

        ClearEdit.setText("Clear");
        ClearEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearEditActionPerformed(evt);
            }
        });
        EditMenu.add(ClearEdit);

        Menu.add(EditMenu);

        HelpMenu.setText("Help");

        Help.setText("Help");
        Help.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HelpActionPerformed(evt);
            }
        });
        HelpMenu.add(Help);

        Menu.add(HelpMenu);

        setJMenuBar(Menu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(editPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(editPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void priceSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceSearchActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_priceSearchActionPerformed

    private void EditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditActionPerformed
        // TODO add your handling code here:
        if(mainTable.getRowCount()==0){
            //Validation
            JOptionPane.showMessageDialog(rootPane, "Cannot be edited since the table is empty","Invalid",JOptionPane.ERROR_MESSAGE);
        }
        else{
            editPanel.setVisible(true);
            mainPanel.setVisible(false);
        }
    }//GEN-LAST:event_EditActionPerformed

    private void editTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editTableMouseClicked
                // TODO add your handling code here:

    }//GEN-LAST:event_editTableMouseClicked

    private void AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddActionPerformed
        // TODO add your handling code here:
        int rowCount = editTable.getRowCount();
        String hotel_name = hotelName_edit.getText();
        String location = location_edit.getText();
        String num = phone_edit.getText();
        String price = price_edit.getText();
        String rating = rating_edit.getText();

        Object[] values = {hotel_name, location, num, rating, price};
        //Validation
        for (Object s : values) {
            if (s.equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Please dont leave any fields empty","Invalid",JOptionPane.ERROR_MESSAGE);
                return;
            }
        }
        for (int i = 0; i < rowCount; i++) {
            String phone_num = (String) editTable.getValueAt(i, 2);
            if (phone_num.equals(num)) {
                JOptionPane.showMessageDialog(rootPane, "Duplicate Number","Invalid",JOptionPane.ERROR_MESSAGE);
                return;
            }  
        }
        
        if (rating.equals("1")||rating.equals("2")||rating.equals("3")||rating.equals("4")||rating.equals("5")){    
            }
        else{
            JOptionPane.showMessageDialog(rootPane, "Invalid Value\n" + "Rating can only be 1,2,3,4 or 5","Invalid",JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        //Adding in table
        addEmptyRow();
        for (int i = 0; i < editTable.getColumnCount(); i++) {
            editTable.setValueAt(values[i], rowCount, i);
            mainTable.setValueAt(values[i], rowCount, i);
        }
        JOptionPane.showMessageDialog(rootPane, "Successfully Added");
        //Clearing text fields
        clearAllFields();
        //Updating in txt file
        exportFile();
    }//GEN-LAST:event_AddActionPerformed

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
        // TODO add your handling code here:
        editPanel.setVisible(false);
        mainPanel.setVisible(true);
    }//GEN-LAST:event_BackActionPerformed

    private void OpenMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenMenuActionPerformed
        //Importing
        if(mainTable.getRowCount()==0){
            importFile();
        }
        //Validation
        else{
            JOptionPane.showMessageDialog(rootPane, "Already Imported","Invalid",JOptionPane.ERROR_MESSAGE);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_OpenMenuActionPerformed

    private void UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateActionPerformed
        String updatedHotelName = hotelName_edit.getText();
        String updatedLocation = location_edit.getText();
        String updatedNum = phone_edit.getText();
        String updatedPrice = price_edit.getText();
        String updatedRating = rating_edit.getText();
        Object[] values = {updatedHotelName, updatedLocation, updatedNum, updatedRating, updatedPrice};
        //Validation
        for (Object s : values) {
            if (s.equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Please dont leave any fields empty","Invalid",JOptionPane.ERROR_MESSAGE);
                return;
            }
        }

        if(editTable.getSelectionModel().isSelectionEmpty()){
            JOptionPane.showMessageDialog(rootPane, "No row selected to be updated","Invalid",JOptionPane.ERROR_MESSAGE);
            return;
        }else{
//            Updating values in table
                for (int i = 0; i < editTable.getColumnCount(); i++) {
                    editTable.setValueAt(values[i], editTable.getSelectedRow(), i);
                    mainTable.setValueAt(values[i], editTable.getSelectedRow(), i);
                }   
            } 
            
        JOptionPane.showMessageDialog(rootPane, "Successfully Updated");
        clearAllFields();
        exportFile();        // TODO add your handling code here:
    }//GEN-LAST:event_UpdateActionPerformed

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        int selectedRow = editTable.getSelectedRow();
        DefaultTableModel tableModel = (DefaultTableModel) editTable.getModel();
        DefaultTableModel tableModel1 = (DefaultTableModel) mainTable.getModel();
        //Validation
        if(editTable.getSelectionModel().isSelectionEmpty()){
            JOptionPane.showMessageDialog(rootPane, "No row Selected to delete","Invalid",JOptionPane.ERROR_MESSAGE);
            return;
        }
        else{
            //Removing values from table
            tableModel.removeRow(selectedRow);
            tableModel1.removeRow(selectedRow);
            exportFile();
            clearAllFields();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_DeleteActionPerformed

    private void editTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editTableMousePressed
        //Action when mouse is clicked in any row of table
        JTable table = (JTable) evt.getSource();
        Point point = evt.getPoint();
        int rowCount = table.rowAtPoint(point);
        if(evt.getClickCount()==2){
            hotelName_edit.setText((String)(editTable.getValueAt(rowCount, 0)));
            location_edit.setText((String)(editTable.getValueAt(rowCount,1)));
            phone_edit.setText((String)(editTable.getValueAt(rowCount,2)));
            price_edit.setText((String)(editTable.getValueAt(rowCount,4)));
            rating_edit.setText((String)(editTable.getValueAt(rowCount,3)));
        }// TODO add your handling code here:
    }//GEN-LAST:event_editTableMousePressed

    private void phone_editKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_phone_editKeyTyped
        //Allowing to only input numbers
        char c = evt.getKeyChar();
    
        if(!Character.isDigit(c)){
        evt.consume();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_phone_editKeyTyped

    private void rating_editKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rating_editKeyTyped
        //Allowing to only input numbers
        char c = evt.getKeyChar();
    
        if(!Character.isDigit(c)){
        evt.consume();
        }         // TODO add your handling code here:
    }//GEN-LAST:event_rating_editKeyTyped

    private void price_editKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_price_editKeyTyped
        //Allowing to only input numbers ana a decimal
        char c = evt.getKeyChar();
        if(Character.isLetter(c)){
            evt.consume();
        }else{
            try{
             Double.parseDouble(price_edit.getText()+c);
            }
            catch(NumberFormatException e){
                evt.consume();
            }
            }
        
     // TODO add your handling code here:
    }//GEN-LAST:event_price_editKeyTyped

    private void SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchActionPerformed
        //Creating and storing data in arraylist
        ArrayList<String> x = new ArrayList<>();
        
        for (int i = 0; i < mainTable.getRowCount(); i++){
            for (int j = 0; j < mainTable.getColumnCount(); j++){
                x.add((String)mainTable.getValueAt(i, j));
            }
        }
        //Validation
        if(NameOrlocationSearch.getText().isEmpty() && priceSearch.getText().isEmpty()){
            JOptionPane.showMessageDialog(rootPane, "Please fill atleast one of the fields","Invalid",JOptionPane.ERROR_MESSAGE);
            return;
        }
        else if(NameOrlocationSearch.getText().isEmpty()){
            int num = Integer.parseInt(priceSearch.getText());
            //Calling Selection Sort
            SortLowToHigh.selectionSort(x);
            int min = 4;
            int max = x.size()-1;
            //Calling Binary Searching
            int output = BinarySearch.binarySearch(x,min,max,num);
            if (output == -1){
                JOptionPane.showMessageDialog(rootPane, "Sorry!!Not found.","Invalid",JOptionPane.ERROR_MESSAGE);
                }
            else{
                JOptionPane.showMessageDialog(rootPane, "Found");
                JOptionPane.showMessageDialog(rootPane, "Hotel Name: "+x.get(output-4) + "\nLocation: " +x.get(output-3));
            }
        }
        else if(priceSearch.getText().isEmpty()){
            //Creating 2d Arraylist
            ArrayList<ArrayList<String>> al = new ArrayList< >();
            //Storing data in 2d ArrayList
            for (int i = 0; i < mainTable.getRowCount(); i++){
                al.add(new ArrayList<>());
                for (int j = 0; j < mainTable.getColumnCount(); j++){
                    al.get(i).add(j,(String)mainTable.getValueAt(i, j));
                }
            }
            String location = NameOrlocationSearch.getText();
            //Checking for the data
            for (int i = 0; i < al.size();i++){
                if(al.get(i).contains(location)){
                    JOptionPane.showMessageDialog(rootPane, "Found");
                    JOptionPane.showMessageDialog(rootPane, "Hotel Name: " + al.get(i).get(0) + "\nLocation: " +al.get(i).get(1));
                    return;   
                }
            }
            JOptionPane.showMessageDialog(rootPane, "Sorry!! Not Found","Invalid",JOptionPane.ERROR_MESSAGE);
        }
        else{
            //Creating 2d Arraylist
            ArrayList<ArrayList<String>> al = new ArrayList< >();
            //Storing data in 2d ArrayList
            for (int i = 0; i < mainTable.getRowCount(); i++){
                al.add(new ArrayList<>());
                for (int j = 0; j < mainTable.getColumnCount(); j++){
                    al.get(i).add(j,(String)mainTable.getValueAt(i, j));
                }
            }
            String location = NameOrlocationSearch.getText();
            String price = priceSearch.getText();
            //Checking for the data
            for (int i = 0; i < al.size();i++){
                if(al.get(i).get(4).contains(price) && al.get(i).contains(location)){
                    JOptionPane.showMessageDialog(rootPane, "Found");
                    JOptionPane.showMessageDialog(rootPane, "Hotel Name: " + al.get(i).get(0)+ "\nLocation: " +al.get(i).get(1));
                    return;   
                }
                else{
                    JOptionPane.showMessageDialog(rootPane, "Sorry!! Not Found","Invalid",JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }
        }// TODO add your handling code here:
    }//GEN-LAST:event_SearchActionPerformed

    private void Low_to_HighActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Low_to_HighActionPerformed
        //Creating and storing data in arraylist
        ArrayList<String> x = new ArrayList<>();
        for (int i = 0; i < mainTable.getRowCount(); i++){
            for (int j = 0; j < mainTable.getColumnCount(); j++){
                x.add((String)mainTable.getValueAt(i, j));
            }
        }
        //Calling Selection Sort
        if(validCheck()) {
            SortLowToHigh.selectionSort(x);
            int cnt = -5;
            for (int i = 0; i < mainTable.getRowCount(); i++){
                cnt = cnt + 5;
                for (int j = 0; j < mainTable.getColumnCount(); j++){
                    mainTable.setValueAt(x.get(j+cnt), i, j);
                }
            } 
        } else {
            JOptionPane.showMessageDialog(rootPane, "Empty row in the table found.","Invalid",JOptionPane.ERROR_MESSAGE);
        }         // TODO add your handling code here:
    }//GEN-LAST:event_Low_to_HighActionPerformed

    private void High_to_LowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_High_to_LowActionPerformed
        //Creating and storing data in arraylist
        ArrayList<String> x = new ArrayList<>();
        for (int i = 0; i < mainTable.getRowCount(); i++){
            for (int j = 0; j < mainTable.getColumnCount(); j++){
                x.add((String)mainTable.getValueAt(i, j));
            }
        }
        //Calling Selection Sort
        if(validCheck()) {
            SortHighToLow.selectionSort(x);
            int cnt = -5;
            for (int i = 0; i < mainTable.getRowCount(); i++){
                cnt = cnt + 5;
                for (int j = 0; j < mainTable.getColumnCount(); j++){
                    mainTable.setValueAt(x.get(j+cnt), i, j);
                }
            } 
        } else {
            JOptionPane.showMessageDialog(rootPane, "Empty row in the table found.","Invalid",JOptionPane.ERROR_MESSAGE);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_High_to_LowActionPerformed

    private void priceSearchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_priceSearchKeyTyped
        //Allowing to only input numbers ana a decimal
        char c = evt.getKeyChar();
        if(Character.isLetter(c)){
            evt.consume();
        }else{
            try{
             Double.parseDouble(price_edit.getText()+c);
            }
            catch(NumberFormatException e){
                evt.consume();
            }
            }// TODO add your handling code here:
    }//GEN-LAST:event_priceSearchKeyTyped

    private void ExitFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitFileActionPerformed
        //Exiting System
        System.exit(0);        // TODO add your handling code here:
    }//GEN-LAST:event_ExitFileActionPerformed

    private void changePanelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changePanelActionPerformed
        //Changing Panels
        if(mainPanel.isShowing()){
            editPanel.setVisible(true);
            mainPanel.setVisible(false);
        }
        else
        {
            editPanel.setVisible(false);
            mainPanel.setVisible(true);
        }// TODO add your handling code here:
    }//GEN-LAST:event_changePanelActionPerformed

    private void ClearEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearEditActionPerformed
        //Clearing Table
        DefaultTableModel tableModel = (DefaultTableModel) editTable.getModel();
        DefaultTableModel tableModel1 = (DefaultTableModel) mainTable.getModel();
        tableModel.setRowCount(0);
        tableModel1.setRowCount(0);
        // TODO add your handling code here:
    }//GEN-LAST:event_ClearEditActionPerformed

    private void phone_editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phone_editActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_phone_editActionPerformed

    private void hotelName_editKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_hotelName_editKeyPressed
        //Allowing to only input letters
        char c = evt.getKeyChar();

        if(Character.isLetter(c)||Character.isWhitespace(c)||Character.isISOControl(c)){
            hotelName_edit.setEditable(true);
        }
        else{
            hotelName_edit.setEditable(false);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_hotelName_editKeyPressed

    private void location_editKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_location_editKeyPressed
        //Allowing to only input letters
        char c = evt.getKeyChar();

        if(Character.isLetter(c)||Character.isWhitespace(c)||Character.isISOControl(c)){
            location_edit.setEditable(true);
        }
        else{
            location_edit.setEditable(false);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_location_editKeyPressed

    private void NameOrlocationSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_NameOrlocationSearchKeyPressed
        // TODO add your handling code here:
        //Allowing to only input letters
        char c = evt.getKeyChar();

        if(Character.isLetter(c)||Character.isWhitespace(c)||Character.isISOControl(c)){
            NameOrlocationSearch.setEditable(true);
        }
        else{
            NameOrlocationSearch.setEditable(false);
        }
    }//GEN-LAST:event_NameOrlocationSearchKeyPressed

    private void For_RatingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_For_RatingActionPerformed
        if(0 != For_Rating.getSelectedIndex()){
            int rat = Integer.parseInt(For_Rating.getSelectedItem().toString());
            //Creating an Arraylist
            ArrayList<Integer> ar = new ArrayList<>();
            if(validCheck()) {
                for(int i = 0; i < mainTable.getRowCount(); i++){
                    int ratu = Integer.parseInt(mainTable.getValueAt(i, 3).toString());
                    //Adding in Arraylist if values match
                    if(rat == ratu){
                        ar.add(i);                
                    }
                }
            
            String cnames = "";
            for(int j = 0; j < ar.size(); j++){
                cnames = cnames + mainTable.getValueAt(ar.get(j), 0).toString()+"\n";
            }
            //Displaying
                JOptionPane.showMessageDialog(rootPane, "Hotel Names:\n"+ cnames);
            } else {
                JOptionPane.showMessageDialog(rootPane, "Empty row in the table found.","Invalid",JOptionPane.ERROR_MESSAGE);
            } 
        }
    }//GEN-LAST:event_For_RatingActionPerformed

    private void HelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HelpActionPerformed
        // TODO add your handling code here:
        //to show help pdf
        try{
            File file = new File("src\\hotel\\is\\Help for Hotel Information System.pdf");
            if(file.exists()){
                if(Desktop.isDesktopSupported()){
                    Desktop.getDesktop().open(file);
                }
                else{
                    JOptionPane.showMessageDialog(rootPane,"Error!!!","Invalid",JOptionPane.ERROR_MESSAGE);
                }
            }
            else{
                JOptionPane.showMessageDialog(rootPane,"File not Founf","Invalid",JOptionPane.ERROR_MESSAGE);
            }
        }
        catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_HelpActionPerformed

    /**
     * @param args the command line arguments
     */
    public void addEmptyRow(){
        //Adding an empty row
        DefaultTableModel tableModel = (DefaultTableModel) editTable.getModel();
        DefaultTableModel tableModel1 = (DefaultTableModel) mainTable.getModel();
        tableModel.addRow(new Object[]{null});
        tableModel1.addRow(new Object[]{null});
    }
    
    public void clearAllFields() {
        //Clearinfg all text fields
        hotelName_edit.setText("");
        location_edit.setText("");
        phone_edit.setText("");
        rating_edit.setText("");
        price_edit.setText("");
    }
    
    public boolean validCheck() {
       //to check if there is empty row in the table
      if(mainTable.getCellEditor()!= null) {
         mainTable.getCellEditor().stopCellEditing();
      }
      for(int i=0; i < mainTable.getRowCount(); i++) {
         for(int j=0; j < mainTable.getColumnCount(); j++) {
            String value = mainTable.getValueAt(i,j).toString();
            if(value.trim().length() == 0) {
               return false;
            }
         }
      }
      return true;
    }
    
    private void importFile(){
        //importing txt file
        FileReader read = null;
        String pathname = "src\\hotel\\is\\demo.txt";
        File file = new File(pathname);
        try {
            read = new FileReader(file);
            BufferedReader br = new BufferedReader(read);
            DefaultTableModel model = (DefaultTableModel)editTable.getModel();
            DefaultTableModel model1 = (DefaultTableModel)mainTable.getModel();
            Object[] line = br.lines().toArray();
            for (int i = 0; i < line.length; i++){
                String [] row = line [i].toString().split(",");
                model.addRow(row);
                model1.addRow(row);
            }
        } catch (FileNotFoundException ex) {
            java.util.logging.Logger.getLogger(hotel_is.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
    }
    
    private void exportFile(){
        //exporting txt file
        String pathname = "src\\hotel\\is\\demo.txt";
        File file = new File(pathname);
        try {
            FileWriter fw = new FileWriter(file);
            BufferedWriter bw = new BufferedWriter(fw);
            for (int i = 0;i<mainTable.getRowCount();i++)
            {
                for(int j=0;j<mainTable.getColumnCount();j++)
                {
                    bw.write(mainTable.getValueAt(i, j).toString() + ",");
                }
                bw.newLine();
            }
            bw.close();
            fw.close();
        } catch (IOException ex) {
            java.util.logging.Logger.getLogger(hotel_is.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
    }
    
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(hotel_is.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(hotel_is.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(hotel_is.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(hotel_is.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new hotel_is().setVisible(true);
                mainPanel.setVisible(true);
                editPanel.setVisible(false);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add;
    private javax.swing.JButton Back;
    private javax.swing.JMenuItem ClearEdit;
    private javax.swing.JButton Delete;
    private javax.swing.JButton Edit;
    private javax.swing.JMenu EditMenu;
    private javax.swing.JLabel Edit_Systemtitle;
    private javax.swing.JMenuItem ExitFile;
    private javax.swing.JMenu FileMenu;
    private javax.swing.JComboBox<String> For_Rating;
    private javax.swing.JMenuItem Help;
    private javax.swing.JMenu HelpMenu;
    private javax.swing.JRadioButton High_to_Low;
    private javax.swing.JRadioButton Low_to_High;
    private javax.swing.JMenuBar Menu;
    private javax.swing.JTextField NameOrlocationSearch;
    private javax.swing.JMenuItem OpenMenu;
    private javax.swing.JLabel Price;
    private javax.swing.JLabel Rating;
    private javax.swing.JButton Search;
    private javax.swing.JLabel System_Title;
    private javax.swing.JButton Update;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JMenuItem changePanel;
    private static javax.swing.JPanel editPanel;
    private javax.swing.JTable editTable;
    private javax.swing.JTextField hotelName_edit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField location_edit;
    private static javax.swing.JPanel mainPanel;
    private javax.swing.JTable mainTable;
    private javax.swing.JTextField phone_edit;
    private javax.swing.JTextField priceSearch;
    private javax.swing.JTextField price_edit;
    private javax.swing.JTextField rating_edit;
    // End of variables declaration//GEN-END:variables
}
